buildscript {
    repositories {
        maven { url "http://maven.xzlcorp.com/repository/maven-public/" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath "gradle.plugin.com.thinkimi.gradle:mybatis-generator-plugin:2.1.2"
    }
}
plugins {
    id "base"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "org.springframework.boot" version "2.1.9.RELEASE"
//    id "com.palantir.docker" version "0.22.1"
    id 'org.asciidoctor.convert' version '2.3.0'
}

description = """【xinzhili backend project】"""
group = 'xyz.jecy'
version = '0.0.1-SNAPSHOT'
allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: "org.springframework.boot"
    apply plugin: 'io.spring.dependency-management'
    bootJar { enabled = false }

    jar {
        enabled = true
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
    }

    repositories {
        maven { url "http://maven.xzlcorp.com/repository/maven-public/" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    configurations {
        providedRuntime

    }
}


subprojects {

    sourceCompatibility = 9
    targetCompatibility = 9

//    if (it.name != "common-api") {
//    apply plugin: 'org.asciidoctor.convert'
//        apply from: rootProject.file("common-method.gradle")
//        apply plugin: 'com.palantir.docker'
//    apply plugin: 'application'
//    apply plugin: 'com.thinkimi.gradle.MybatisGenerator'

//    dependencies {
//        implementation 'cn.xinzhili:spring-v2:2019-09-16-SNAPSHOT'
//        implementation 'org.apache.commons:commons-lang3:3.9'
//
//        compile 'org.projectlombok:lombok:1.18.10'
//        annotationProcessor 'org.projectlombok:lombok:1.18.10'
//    }
//spring common dependency
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
//        testCompile(
//                'org.springframework.boot:spring-boot-starter-test',
////                'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.2.RELEASE',
////                'org.springframework.restdocs:spring-restdocs-core:1.1.2.RELEASE',
////                'org.assertj:assertj-core:3.5.2',
////                'com.jayway.jsonpath:json-path'
//        )
    }


//    configurations {
//        mybatisGenerator
//    }
//
//    mybatisGenerator {
//        verbose = true
//        configFile = 'generatorConfig.xml'
//
//        dependencies {
//            mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.7'
//            mybatisGenerator 'org.postgresql:postgresql:42.2.8'
//            mybatisGenerator 'cn.xinzhili:x-utils-mybatis:20190306-1-SNAPSHOT'
//        }
//    }

//        docker {
//            name "${getDockerRegistry()}${project.name}:${publicVersion}"
//            copySpec.from("startup.sh")
//            copySpec.from("build/libs")
//            pull true
//            noCache true
//        }
//    }
}
